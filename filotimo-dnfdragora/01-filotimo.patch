unchanged:
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -86,28 +86,11 @@ endif(NOT SPHINX_EXECUTABLE STREQUAL "SPHINX_EXECUTABLE-NOTFOUND")
 
 # Installing application code
 install(PROGRAMS ${CMAKE_SOURCE_DIR}/bin/dnfdragora DESTINATION ${CMAKE_INSTALL_BINDIR})
-install(PROGRAMS ${CMAKE_SOURCE_DIR}/bin/dnfdragora-updater DESTINATION ${CMAKE_INSTALL_BINDIR})
 file(GLOB_RECURSE PY_SRC LIST_DIRECTORIES false RELATIVE ${CMAKE_SOURCE_DIR} dnfdragora/*.py)
 install(FILES ${PY_SRC} ${CMAKE_BINARY_DIR}/dnfdragora/version.py DESTINATION ${PYTHON_INSTALL_DIR}/dnfdragora)
 
 # Installing configuration
 install(FILES ${CMAKE_BINARY_DIR}/etc/dnfdragora.yaml DESTINATION ${CMAKE_INSTALL_FULL_SYSCONFDIR}/dnfdragora)
-install(FILES ${CMAKE_SOURCE_DIR}/share/applications/org.mageia.dnfdragora-updater.desktop DESTINATION ${CMAKE_INSTALL_FULL_SYSCONFDIR}/xdg/autostart)
-
-# Installing data files
-if(GETTEXT_FOUND)
-	install(FILES ${CMAKE_BINARY_DIR}/share/metainfo/org.mageia.dnfdragora.appdata.xml DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/appdata)
-else()
-	install(FILES ${CMAKE_SOURCE_DIR}/share/metainfo/org.mageia.dnfdragora.appdata.xml DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/appdata)
-endif(GETTEXT_FOUND)
 
 install(FILES ${CMAKE_SOURCE_DIR}/share/applications/org.mageia.dnfdragora.desktop DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/applications)
-install(FILES ${CMAKE_SOURCE_DIR}/share/applications/org.mageia.dnfdragora-updater.desktop DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/applications)
-install(FILES ${CMAKE_SOURCE_DIR}/share/applications/org.mageia.dnfdragora-localinstall.desktop DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/applications)
-install(FILES ${CMAKE_SOURCE_DIR}/share/images/16x16/dnfdragora-logo.png DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/16x16/apps RENAME dnfdragora.png)
-install(FILES ${CMAKE_SOURCE_DIR}/share/images/32x32/dnfdragora-logo.png DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/32x32/apps RENAME dnfdragora.png)
-install(FILES ${CMAKE_SOURCE_DIR}/share/images/48x48/dnfdragora-logo.png DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/48x48/apps RENAME dnfdragora.png)
-install(FILES ${CMAKE_SOURCE_DIR}/share/images/64x64/dnfdragora-logo.png DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/64x64/apps RENAME dnfdragora.png)
-install(FILES ${CMAKE_SOURCE_DIR}/share/images/128x128/dnfdragora-logo.png DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/128x128/apps RENAME dnfdragora.png)
-install(FILES ${CMAKE_SOURCE_DIR}/share/images/256x256/dnfdragora-logo.png DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/256x256/apps RENAME dnfdragora.png)
 install(DIRECTORY ${CMAKE_SOURCE_DIR}/share/images DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/dnfdragora)
unchanged:
--- a/dnfdragora/updater.py
+++ /dev/null
@@ -1,413 +0,0 @@
-# vim: set fileencoding=utf-8 :
-# vim: set et ts=4 sw=4:
-'''
-dnfdragora is a graphical package management tool based on libyui python bindings
-
-License: GPLv3
-
-Author:  Bj√∂rn Esser <besser82@fedoraproject.org>
-
-@package dnfdragora
-'''
-
-import gettext, sched, sys, threading, time, yui, os
-
-from PIL import Image
-from dnfdragora import config, misc, dialogs, ui, dnfd_client
-
-from pystray import Menu, MenuItem
-from pystray import Icon as Tray
-from queue import SimpleQueue, Empty
-
-import logging
-logger = logging.getLogger('dnfdragora.updater')
-
-
-class DnfdragoraUpdaterTray(Tray):
-    '''
-    pystray.Icon subclass with auto-closing notifications
-    '''
-    notification_expire_timeout = 7  # in seconds
-
-    def notify(self, *args, **kw):
-        super().notify(*args, **kw)
-        logger.debug('Scheduling notification expiration in {} seconds'.format(self.notification_expire_timeout))
-        # XXX: is this thread-safe?
-        threading.Timer(self.notification_expire_timeout, self.remove_notification).start()
-
-
-class Updater:
-
-    def __init__(self, options={}):
-        self.__main_gui  = None
-
-        self.__config         = config.AppConfig('dnfdragora')
-        self.__updateInterval = 180
-        self.__update_count = -1
-
-        self.__log_enabled = False
-        self.__log_directory = None
-        self.__level_debug = False
-
-        self.__hide_menu = True
-
-        if self.__config.userPreferences:
-            if 'settings' in self.__config.userPreferences.keys() :
-                settings = self.__config.userPreferences['settings']
-                if 'interval for checking updates' in settings.keys() :
-                    self.__updateInterval = int(settings['interval for checking updates'])
-                self.__hide_menu = settings['hide_update_menu'] if 'hide_update_menu' in settings.keys() \
-                  else False
-
-                #### Logging
-                if 'log' in settings.keys():
-                  log = settings['log']
-                  if 'enabled' in log.keys() :
-                    self.__log_enabled = log['enabled']
-                  if self.__log_enabled:
-                    if 'directory' in log.keys() :
-                        self.__log_directory = log['directory']
-                    if 'level_debug' in log.keys() :
-                        self.__level_debug = log['level_debug']
-
-        if self.__log_enabled:
-          if self.__log_directory:
-            log_filename = os.path.join(self.__log_directory, "dnfdragora-updater.log")
-            if self.__level_debug:
-              misc.logger_setup(log_filename, loglvl=logging.DEBUG)
-            else:
-              misc.logger_setup(log_filename)
-            print("Logging into %s, debug mode is %s"%(self.__log_directory, ("enabled" if self.__level_debug else "disabled")))
-            logger.info("dnfdragora-updater started")
-        else:
-           print("Logging disabled")
-
-        # if missing gets the default icon from our folder (same as dnfdragora)
-        icon_path = '/usr/share/dnfdragora/images/'
-
-        if 'icon-path' in options.keys() :
-            icon_path = options['icon-path']
-        if icon_path.endswith('/'):
-            icon_path = icon_path + 'dnfdragora.svg' if ( os.path.exists(icon_path + 'dnfdragora.svg') ) else icon_path + 'dnfdragora.png'
-        else:
-            icon_path = icon_path + '/dnfdragora.svg' if ( os.path.exists(icon_path + '/dnfdragora.svg') ) else icon_path + '/dnfdragora.png'
-
-        theme_icon_pathname = icon_path if 'icon-path' in options.keys() else self.__get_theme_icon_pathname() or icon_path
-
-        logger.debug("Icon: %s"%(theme_icon_pathname))
-        #empty icon as last chance
-        self.__icon = Image.Image()
-        try:
-          if theme_icon_pathname.endswith('.svg'):
-              with open(theme_icon_pathname, 'rb') as svg:
-                  self.__icon = self.__svg_to_Image(svg.read())
-          else:
-              self.__icon  = Image.open(theme_icon_pathname)
-        except Exception as e:
-          logger.error(e)
-          logger.error("Cannot open theme icon using default one %s"%(icon_path))
-          self.__icon  = Image.open(icon_path)
-
-        # resetting icon_path to default value
-        icon_path = '/usr/share/dnfdragora/images/'
-        if 'icon-path' in options.keys() :
-            icon_path = options['icon-path']
-        if icon_path.endswith('/'):
-            icon_path = icon_path + 'dnfdragora-update.svg' if ( os.path.exists(icon_path + 'dnfdragora-update.svg') ) else icon_path + 'dnfdragora-update.png'
-        else:
-            icon_path = icon_path + '/dnfdragora-update.svg' if ( os.path.exists(icon_path + '/dnfdragora-update.svg') ) else icon_path + '/dnfdragora-update.png'
-
-        theme_icon_pathname = icon_path if 'icon-path' in options.keys() else self.__get_theme_icon_pathname(name="dnfdragora-update") or icon_path
-
-        self.__icon_update = Image.Image()
-        try:
-          if theme_icon_pathname.endswith('.svg'):
-              with open(theme_icon_pathname, 'rb') as svg:
-                  self.__icon_update = self.__svg_to_Image(svg.read())
-          else:
-              self.__icon_update  = Image.open(theme_icon_pathname)
-        except Exception as e:
-          logger.error(e)
-          logger.error("Cannot open theme icon using default one %s"%(icon_path))
-          self.__icon_update  = Image.open(icon_path)
-
-        try:
-            self.__backend = dnfd_client.Client()
-        except dnfdaemon.client.DaemonError as error:
-            logger.error(_('Error starting dnfdaemon service: [%s]')%(str(error)))
-            return
-        except Exception as e:
-            logger.error(_('Error starting dnfdaemon service: [%s]')%( str(e)))
-            return
-
-        self.__running   = True
-        self.__updater   = threading.Thread(target=self.__update_loop)
-        self.__scheduler = sched.scheduler(time.time, time.sleep)
-        self.__getUpdatesRequested = False
-
-        self.__menu  = Menu(
-            MenuItem(_('Update'), self.__run_update),
-            MenuItem(_('Open dnfdragora dialog'), self.__run_dnfdragora),
-            MenuItem(_('Check for updates'), self.__check_updates),
-            MenuItem(_('Exit'), self.__shutdown)
-        )
-        self.__name  = 'dnfdragora-updater'
-        self.__tray  = DnfdragoraUpdaterTray(self.__name, icon=self.__icon, title=self.__name, menu=self.__menu)
-
-
-    def __get_theme_icon_pathname(self, name='dnfdragora'):
-      '''
-        return theme icon pathname or None if missing
-      '''
-      try:
-          import xdg.IconTheme
-      except ImportError:
-          logger.error("Error: module xdg.IconTheme is missing")
-          return None
-      else:
-          pathname = xdg.IconTheme.getIconPath(name, 256)
-          return pathname
-      return None
-
-    def __svg_to_Image(self, svg_string):
-      '''
-        gets svg content and returns a PIL.Image object
-      '''
-      import cairosvg
-      import io
-      in_mem_file = io.BytesIO()
-      cairosvg.svg2png(bytestring=svg_string, write_to=in_mem_file)
-      return Image.open(io.BytesIO(in_mem_file.getvalue()))
-
-    def __shutdown(self, *kwargs):
-        logger.info("shutdown")
-        if self.__main_gui :
-          logger.warning("Cannot exit dnfdragora is not deleted %s"%("and RUNNING" if self.__main_gui.running else "but NOT RUNNING"))
-          return
-        try:
-          self.__running = False
-          self.__updater.join()
-          try:
-            if self.__backend:
-              self.__backend.Exit()
-              self.__backend = None
-          except:
-            pass
-          yui.YDialog.deleteAllDialogs()
-          yui.YUILoader.deleteUI()
-
-        except:
-          pass
-
-        finally:
-            if not self.__scheduler.empty():
-                for task in self.__scheduler.queue:
-                    try:
-                        self.__scheduler.cancel(task)
-                    except:
-                        pass
-
-            if self.__tray != None:
-              self.__tray.stop()
-            if self.__backend:
-              self.__backend.Exit(False)
-              time.sleep(0.5)
-              self.__backend = None
-
-    def __reschedule_update_in(self, minutes):
-      '''
-      clean up scheduler and schedule update in 'minutes'
-      '''
-      logger.debug("rescheduling")
-      if not self.__scheduler.empty():
-        logger.debug("Reset scheduler")
-        for task in self.__scheduler.queue:
-          try:
-            self.__scheduler.cancel(task)
-          except:
-            pass
-      if self.__scheduler.empty():
-        self.__scheduler.enter(minutes * 60, 1, self.__get_updates)
-        logger.info("Scheduled check for updates in %d %s", minutes if minutes >= 1 else minutes*60, "minutes" if minutes >= 1 else "seconds" )
-        return True
-
-      return False
-
-    def __run_dialog(self, args, *kwargs):
-        if self.__tray != None and self.__main_gui == None and self.__tray.visible:
-            if self.__hide_menu:
-              self.__tray.visible = False
-            time.sleep(0.5)
-            try:
-                self.__main_gui = ui.mainGui(args)
-            except Exception as e:
-              logger.error("Exception on running dnfdragora with args %s - %s", str(args), str(e))
-              dialogs.warningMsgBox({'title' : _("Running dnfdragora failure"), "text": str(e), "richtext":True})
-              yui.YDialog.deleteAllDialogs()
-              time.sleep(0.5)
-              self.__main_gui = None
-              return
-            #self.__tray.icon = None
-            self.__main_gui.handleevent()
-
-            logger.debug("Closing dnfdragora")
-            while self.__main_gui.loop_has_finished != True:
-                time.sleep(1)
-            logger.info("Closed dnfdragora")
-            yui.YDialog.deleteAllDialogs()
-            time.sleep(1)
-            self.__main_gui = None
-            logger.debug("Look for remaining updates")
-            # Let's delay a bit the check, otherwise Lock will fail
-            done=self.__reschedule_update_in(0.5)
-            logger.debug("Scheduled %s", "done" if done else "skipped")
-        else:
-          if self.__main_gui:
-            logger.warning("Cannot run dnfdragora because it is already running")
-          else:
-            logger.warning("Cannot run dnfdragora")
-
-    def __run_dnfdragora(self, *kwargs):
-        logger.debug("Menu visibility is %s", str(self.__tray.visible))
-        return self.__run_dialog({})
-
-
-    def __run_update(self, *kwargs):
-        logger.debug("Menu visibility is %s", str(self.__tray.visible))
-        return self.__run_dialog({'update_only': True})
-
-    def __check_updates(self, *kwargs):
-      '''
-      Start get updates by simply locking the DB
-      '''
-      logger.debug("Start checking for updates, by menu command")
-      if self.__hide_menu:
-        self.__tray.visible = False
-      try:
-        self.__backend.Lock()
-        self.__getUpdatesRequested = True
-      except Exception as e:
-        logger.error(_('Exception caught: [%s]')%(str(e)))
-
-    def __get_updates(self, *kwargs):
-      '''
-      Start get updates by simply locking the DB
-      '''
-      logger.debug("Start getting updates")
-      try:
-        self.__backend.Lock()
-      except Exception as e:
-        logger.error(_('Exception caught: [%s]')%(str(e)))
-
-    def __OnRepoMetaDataProgress(self, name, frac):
-      '''Repository Metadata Download progress.'''
-      values = (name, frac)
-      #print('on_RepoMetaDataProgress (root): %s', repr(values))
-      if frac == 0.0 or frac == 1.0:
-        logger.debug('OnRepoMetaDataProgress: %s', repr(values))
-
-    def __update_loop(self):
-      self.__get_updates()
-      backend_locked = False
-
-      while self.__running == True:
-        update_next = self.__updateInterval
-        add_to_schedule = False
-        try:
-          counter = 0
-          count_max = 1000
-
-          #if dnfdragora is running we receive transaction/rpm progress/download etc events
-          #let's dequeue them as quick as possible
-          while counter < count_max:
-            counter = counter + 1
-
-            item = self.__backend.eventQueue.get_nowait()
-            event = item['event']
-            info = item['value']
-
-            if (event == 'Lock') :
-              logger.info("Event received %s - info %s", event, str(info))
-              backend_locked = info['result']
-              if backend_locked:
-                self.__backend.GetPackages('updates_all')
-                logger.debug("Getting update packages")
-              else:
-                # no locked try again in a minute
-                update_next = 1
-                add_to_schedule = True
-            elif (event == 'OnRepoMetaDataProgress'):
-              #let's log metadata since slows down the Lock requests
-              self.__OnRepoMetaDataProgress(info['name'], info['frac'])
-            elif (event == 'GetPackages'):
-              logger.debug("Got GetPackages event menu visibility is %s", str(self.__tray.visible))
-              #if not self.__tray.visible :
-              # ugly workaround to show icon if hidden, set empty icon and show it
-              self.__tray.icon = Image.Image()
-              self.__tray.visible = True
-              logger.debug("Event received %s", event)
-              if not info['error']:
-                po_list = info['result']
-                self.__update_count = len(po_list)
-                logger.info("Found %d updates"%(self.__update_count))
-
-                if (self.__update_count >= 1):
-                  self.__tray.icon = self.__icon_update
-                  self.__tray.visible = True
-                  self.__tray.notify(title='dnfdragora-update', message=_('%d updates available.') % self.__update_count)
-                elif self.__getUpdatesRequested :
-                  # __update_count == 0 but get updates has been requested by user command
-                  # Let's give a feed back anyway
-                  logger.debug("No updates found after user request")
-                  self.__tray.icon = self.__icon
-                  self.__tray.notify(title='dnfdragora-update', message=_('No updates available'))
-                  self.__tray.visible = not self.__hide_menu
-                else:
-                  self.__tray.icon = self.__icon
-                  self.__tray.visible = not self.__hide_menu
-                  logger.debug("No updates found")
-                self.__getUpdatesRequested = False
-                logger.debug("Menu visibility is %s", str(self.__tray.visible))
-              else:
-                # error
-                logger.error("GetPackages error %s", str(info['error']))
-              #force scheduling again
-              add_to_schedule = True
-              # Let's release the db
-              self.__backend.Unlock(sync=True)
-              backend_locked = False
-              logger.debug("RPM DB unlocked")
-            #elif (event == xxx)
-            else:
-              if backend_locked:
-                logger.warning("Unmanaged event received %s - info %s", event, str(info))
-
-        except Empty as e:
-          pass
-
-        if add_to_schedule:
-          self.__reschedule_update_in(update_next)
-        elif self.__scheduler.empty():
-          # if the scheduler is empty we schedule a check according
-          # to configuration file anyway
-          self.__scheduler.enter(update_next * 60, 1, self.__get_updates)
-          logger.info("Scheduled check for updates in %d minutes", update_next)
-        self.__scheduler.run(blocking=False)
-        time.sleep(0.5)
-
-      logger.info("Update loop end")
-
-
-    def __main_loop(self):
-        def setup(tray) :
-            # False to start without icon
-            tray.visible = True
-
-        self.__updater.start()
-        time.sleep(1)
-        self.__tray.run(setup=setup)
-        logger.info("dnfdragora-updater termination")
-
-
-    def main(self):
-        self.__main_loop()
unchanged:
--- a/po/CMakeLists.txt
+++ b/po/CMakeLists.txt
@@ -2,15 +2,15 @@
 file(GLOB PO_FILES "${CMAKE_CURRENT_SOURCE_DIR}/*.po")
 
 # Set our target for AppData file
-set(xml_file ${CMAKE_BINARY_DIR}/share/metainfo/org.mageia.dnfdragora.appdata.xml)
+#set(xml_file ${CMAKE_BINARY_DIR}/share/metainfo/org.mageia.dnfdragora.appdata.xml)
 # Merge the translations into the initial AppData file
-add_custom_command(OUTPUT ${xml_file}
-        COMMAND ${GETTEXT_MSGFMT_EXECUTABLE} --xml -d ${CMAKE_CURRENT_SOURCE_DIR} --template ${CMAKE_SOURCE_DIR}/share/metainfo/org.mageia.dnfdragora.appdata.xml -o ${xml_file}
-        COMMENT "Generating ${xml_file}"
-        )
-add_custom_target(make_directory_for_xml ALL
-    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_BINARY_DIR}/share/metainfo)
-add_custom_target(xml_translations ALL DEPENDS ${xml_file})
+#add_custom_command(OUTPUT ${xml_file}
+#        COMMAND ${GETTEXT_MSGFMT_EXECUTABLE} --xml -d ${CMAKE_CURRENT_SOURCE_DIR} --template ${CMAKE_SOURCE_DIR}/share/metainfo/org.mageia.dnfdragora.appdata.xml -o ${xml_file}
+#        COMMENT "Generating ${xml_file}"
+#        )
+#add_custom_target(make_directory_for_xml ALL
+#    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_BINARY_DIR}/share/metainfo)
+#add_custom_target(xml_translations ALL DEPENDS ${xml_file})
 
 # Generate and install each translation in a separate target
 foreach(PO_FILE ${PO_FILES})
unchanged:
--- a/share/applications/org.mageia.dnfdragora-localinstall.desktop
+++ /dev/null
@@ -1,130 +0,0 @@
-[Desktop Entry]
-Name=dnfdragora Package Installer
-Name[af]=dnfdragora-pakketinstallasie
-Name[bg]=–ò–Ω—Å—Ç–∞–ª–∞—Ç–æ—Ä –Ω–∞ dnfdragora –ø–∞–∫–µ—Ç–∏
-Name[ca]=Instal¬∑lador de paquets dnfdragora
-Name[cs]=Instal√°tor bal√≠ƒçk≈Ø dnfdragora
-Name[da]=dnfdragora-pakkeinstallationsprogram
-Name[de]=dnfdragora Paket-Installationsprogramm
-Name[en_GB]=dnfdragora Package Installer
-Name[eo]=Dnfdragora Pakaƒµa Instalilo
-Name[es]=Instalador de paquetes dnfdragora
-Name[et]=dnfdragora tarkvara paigaldaja
-Name[eu]=dnfdragora pakete instalatzailea
-Name[fi]=dnfdragora pakettien asentaja
-Name[fr]=Gestionnaire de logiciels dnfdragora
-Name[he]=◊ê◊©◊£ ◊î◊™◊ß◊†◊™ ◊î◊ó◊ë◊ô◊ú◊ï◊™ dnfdragora
-Name[hi]=dnfdragora ‡§™‡•à‡§ï‡•á‡§ú ‡§á‡§Ç‡§∏‡•ç‡§ü‡•â‡§≤‡§∞
-Name[hr]=dnfdragora Instaler paketa
-Name[hu]=dnfdragora Csomagtelep√≠t≈ë
-Name[id]=Installer paket dnfdragora
-Name[ie]=Installator de paccages dnfdragora
-Name[it]=dnfdragora programma di installazione pacchetti
-Name[ja]=dnfdragora „Éë„ÉÉ„Ç±„Éº„Ç∏ „Ç§„É≥„Çπ„Éà„Éº„É©
-Name[ko]=dnfdragora Ìå®ÌÇ§ÏßÄ ÏÑ§Ïπò ÌîÑÎ°úÍ∑∏Îû®
-Name[lt]=dnfdragora paket≈≥ diegimo programa
-Name[nb]=dnfdragora installerer
-Name[nl]=dnfdragora pakket-installatieprogramma
-Name[pl]=dnfdragora - wgrywanie pakiet√≥w
-Name[pt]=Instalador de pacotes - dnfdragora
-Name[pt_BR]=Instalador de pacotes dnfdragora
-Name[ru]=–°—Ä–µ–¥—Å—Ç–≤–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤ dnfdragora
-Name[sk]=dnfdragora in≈°tal√°tor bal√≠kov
-Name[sl]=Program za namestitev paketov - dnfdragora
-Name[sq]=dnfdragora instalues Pakete
-Name[sr]=dnfdragora –ò–Ω—Å—Ç–∞–ª–µ—Ä –ø–∞–∫–µ—Ç–∞
-Name[sv]=Paketinstallerare f√∂r dnfdragora
-Name[tr]=DnfDragora Paket Kurucusu
-Name[uk]=–ó–∞—Å—ñ–± –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞–∫—É–Ω–∫—ñ–≤ dnfdragora
-Name[zh_CN]=dnfdragoraËΩØ‰ª∂ÂåÖÂÆâË£ÖÂô®
-Name[zh_TW]=dnfdragora ËªüÈ´îÂ•ó‰ª∂ÂÆâË£ùÁ®ãÂºè
-GenericName=RPM Package Installer
-GenericName[af]=RPM-pakketinstallasie
-GenericName[bg]=–ò–Ω—Å—Ç–∞–ª–∞—Ç–æ—Ä –Ω–∞ RPM –ø–∞–∫–µ—Ç–∏
-GenericName[ca]=Instal¬∑lador de paquets RPM
-GenericName[cs]=Instal√°tor bal√≠ƒçk≈Ø RPM
-GenericName[da]=RPM-pakkeinstallationsprogram
-GenericName[de]=RPM-Paket-Installationsprogramm
-GenericName[el]=ŒïŒ≥Œ∫Œ±œÑŒ±œÉœÑŒ¨œÑŒ∑œÇ Œ†Œ±Œ∫Œ≠œÑœâŒΩ RPM
-GenericName[en_GB]=RPM Package Installer
-GenericName[eo]=RPMa Pako-Instalilo
-GenericName[es]=Instalador de paquetes RPM
-GenericName[et]=Tarkvarapakettide paigaldaja
-GenericName[eu]=RPM pakete instalatzailea
-GenericName[fi]=RPM-pakettien asentaja
-GenericName[fr]=Gestionnaire de paquetages RPM
-GenericName[he]=◊ê◊©◊£ ◊î◊™◊ß◊†◊™ ◊ó◊ë◊ô◊ú◊ï◊™ RPM
-GenericName[hi]=RPM ‡§™‡•à‡§ï‡•á‡§ú ‡§á‡§Ç‡§∏‡•ç‡§ü‡•â‡§≤‡§∞
-GenericName[hr]=Instaler RPM paketa
-GenericName[hu]=RPM Csomagtelep√≠t≈ë
-GenericName[id]=Installer Paket RPM
-GenericName[ie]=Installator de paccages RPM
-GenericName[it]=Programma di installazione pacchetti RPM
-GenericName[ja]=RPM „Éë„ÉÉ„Ç±„Éº„Ç∏ „Ç§„É≥„Çπ„Éà„Éº„É©
-GenericName[ko]=RPM Ìå®ÌÇ§ÏßÄ ÏÑ§Ïπò ÌîÑÎ°úÍ∑∏Îû®
-GenericName[lt]=RPM paket≈≥ diegimo programa
-GenericName[nb]=RPM pakke installerer
-GenericName[nl]=RPM pakket-installatieprogramma
-GenericName[pl]=Wgrywanie pakiet√≥w RPM
-GenericName[pt]=Instalador de pacotes RPM
-GenericName[pt_BR]=Instalador de pacotes RPM
-GenericName[ru]=–£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –ø–∞–∫–µ—Ç–æ–≤ RPM
-GenericName[sk]=In≈°tal√°tor RPM bal√≠kov
-GenericName[sl]=Program za namestitev paketov RPM
-GenericName[sq]=RPM Instalues Pakete
-GenericName[sr]=–ò–Ω—Å—Ç–∞–ª–µ—Ä RPM –ø–∞–∫–µ—Ç–∞
-GenericName[sv]=RPM-paketinstallerare
-GenericName[tr]=RPM Paketi Kurucusu
-GenericName[uk]=–í—Å—Ç–∞–Ω–æ–≤–ª—é–≤–∞—á –ø–∞–∫—É–Ω–∫—ñ–≤ RPM
-GenericName[zh_CN]=RPMËΩØ‰ª∂ÂåÖÂÆâË£ÖÂô®
-GenericName[zh_TW]=RPM ËªüÈ´îÂ•ó‰ª∂ÂÆâË£ùÁ®ãÂºè
-Icon=dnfdragora
-Exec=dnfdragora --install %F
-Comment=Install local packages on the system
-Comment[af]=Installeer plaaslike pakkette op die stelsel
-Comment[bg]=–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–π—Ç–µ –ª–æ–∫–∞–ª–Ω–∏ –ø–∞–∫–µ—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞
-Comment[ca]=Instal¬∑leu paquets locals al sistema
-Comment[cs]=Instalovat m√≠stn√≠ bal√≠ƒçky do syst√©mu
-Comment[da]=Installer lokale pakker p√• systemet
-Comment[de]=Lokale Pakete auf dem System installieren
-Comment[el]=ŒïŒ≥Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ œÑŒøœÄŒπŒ∫œéŒΩ œÄŒ±Œ∫Œ≠œÑœâŒΩ œÉœÑŒø œÉœçœÉœÑŒ∑ŒºŒ±
-Comment[en_GB]=Install local packages on the system
-Comment[eo]=Instali lokajn pakaƒµojn en la sistemo
-Comment[es]=Instalar paquetes locales
-Comment[et]=Kohalike tarkvarapakettide paigaldamine s√ºsteemi
-Comment[eu]=Instalatu sisteman pakete lokalak
-Comment[fi]=Asenna paikalliset paketit j√§rjestelm√§√§n
-Comment[fr]=Installer des paquetages locaux sur le syst√®me
-Comment[he]=◊î◊™◊ß◊†◊™ ◊ó◊ë◊ô◊ú◊ï◊™ ◊û◊ß◊ï◊û◊ô◊ï◊™ ◊¢◊ú ◊î◊û◊¢◊®◊õ◊™
-Comment[hi]=‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§™‡§∞ ‡§≤‡•ã‡§ï‡§≤ ‡§™‡•à‡§ï‡•á‡§ú ‡§á‡§Ç‡§∏‡•ç‡§ü‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç
-Comment[hr]=Instaliraj lokalne pakete u sustav
-Comment[hu]=Helyi csomagok telep√≠t√©se a rendszerre
-Comment[id]=Install paket lokal pada sistem
-Comment[ie]=Installar local paccages a vor sistema
-Comment[it]=Installa pacchetti locali nel sistema
-Comment[ja]=„Ç∑„Çπ„ÉÜ„É†‰∏ä„ÅÆ„É≠„Éº„Ç´„É´ „Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô
-Comment[ko]=ÏãúÏä§ÌÖúÏóê Î°úÏª¨ Ìå®ÌÇ§ÏßÄ ÏÑ§Ïπò
-Comment[lt]=ƒÆdiegti vietinius paketus sistemoje
-Comment[nb]=Installer lokal pakke p√• systemet
-Comment[nl]=Installeer lokale pakketten op het systeem
-Comment[pl]=Wgrywaj pakiety z lokalnego systemu
-Comment[pt]=Instalar pacotes locais no sistema
-Comment[pt_BR]=Instalar pacotes locais no sistema
-Comment[ru]=–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –≤ —Å–∏—Å—Ç–µ–º—É
-Comment[sk]=Nain≈°talovanie lok√°lnych bal√≠kov do syst√©mu
-Comment[sl]=Namestitev shranjenih paketov na sistem
-Comment[sq]=Instalo paketat lokalizuar n√´ sistem
-Comment[sr]=–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞—ò –ª–æ–∫–∞–ª–Ω–µ –ø–∞–∫–µ—Ç–µ –Ω–∞ —Å–∏—Å—Ç–µ–º
-Comment[sv]=Installera lokala paket p√• systemet.
-Comment[tr]=Yerel paketleri sisteme kur
-Comment[uk]=–í—Å—Ç–∞–Ω–æ–≤–ª—é—î –ª–æ–∫–∞–ª—å–Ω—ñ –ø–∞–∫—É–Ω–∫–∏ —É —Å–∏—Å—Ç–µ–º—ñ
-Comment[zh_CN]=Â∞ÜÊú¨Âú∞ËΩØ‰ª∂ÂåÖÂÆâË£ÖÂà∞Á≥ªÁªü
-Comment[zh_TW]=ÂÆâË£ùÊú¨Ê©üËªüÈ´îÂ•ó‰ª∂Âà∞Á≥ªÁµ±‰∏ä
-Terminal=false
-Type=Application
-Categories=System;Settings;PackageManager;
-StartupNotify=true
-NoDisplay=true
-MimeType=application/x-rpm;application/x-redhat-package-manager;
-
-
unchanged:
--- a/share/applications/org.mageia.dnfdragora-updater.desktop
+++ /dev/null
@@ -1,122 +0,0 @@
-[Desktop Entry]
-Name=dnfdragora-updater
-Name[af]=dnfdragora-bywerkings
-Name[bg]=dnfdragora-updater
-Name[ca]=Actualitzador de dnfdragora
-Name[cs]=dnfdragora-aktualiz√°tor
-Name[da]=dnfdragora-updater
-Name[de]=dnfdragora-updater
-Name[el]=ŒïŒ≥Œ∫Œ±œÑŒ±œÉœÑŒ¨œÑŒ∑œÇ Œ†Œ±Œ∫Œ≠œÑœâŒΩ dnfdragora
-Name[en_GB]=dnfdragora-updater
-Name[eo]=dnfdragora-ƒùisdatigilo
-Name[es]=dnfdragora-updater
-Name[et]=dnfdragora-updater
-Name[eu]=dnfdragora-updater
-Name[fi]=dnfdragora-p√§ivitysohjelma
-Name[fr]=dnfdragora-updater
-Name[he]=dnfdragora-updater
-Name[hi]=dnfdragora-‡§Ö‡§™‡§°‡•á‡§ü ‡§∏‡§æ‡§ß‡§®
-Name[hu]=Csomagfriss√≠t≈ë
-Name[id]=pembaruan-dnfdragora
-Name[ie]=dnfdragora-updater
-Name[it]=dnfdragora-updater
-Name[ja]=dnfdragora-updater
-Name[ko]=dnfdragora-ÏóÖÎç∞Ïù¥ÌÑ∞
-Name[lt]=dnfdragora-updater
-Name[nb]=dnfdragora oppdaterer
-Name[nl]=dnfdragora-updater
-Name[pl]=dnfdragora-updater
-Name[pt]=dnfdragora-updater
-Name[pt_BR]=dnfdragora-updater
-Name[ru]=dnfdragora-updater
-Name[sk]=dnfdragora-aktualiz√°tor
-Name[sl]=dnfdragora-updater
-Name[sq]=dnfdragora-p√´rdit√´sues
-Name[sr]=dnfdragora-–∞–ª–∞—Ç –∑–∞ –Ω–∞–¥–æ–≥—Ä–∞–¥—ö—É
-Name[sv]=Uppdatera dnfdragora
-Name[tr]=DnfDragora-G√ºncelleyici
-Name[uk]=–û–Ω–æ–≤–ª—é–≤–∞—á dnfdragora
-Name[zh_CN]=dnfdragora-updater
-Name[zh_TW]=dnfdragora Êõ¥Êñ∞Á®ãÂºè
-GenericName=Tray-icon to check for updates
-GenericName[bg]=–ò–∫–æ–Ω–∞ –∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏
-GenericName[ca]=Icona per comprovar les actualitzacions
-GenericName[cs]=Ikona v oznamovac√≠ ƒç√°sti panelu pro zkontrolov√°n√≠ aktualizac√≠
-GenericName[da]=Bakkeikon til at s√∏ge efter opdateringer
-GenericName[de]=Tray-Symbol um nach Updates zu suchen
-GenericName[en_GB]=Tray-icon to check for updates
-GenericName[eo]=Kesto-ikono por kontroli ƒùisdatigojn
-GenericName[es]=Icono de bandeja para comprobar actualizaciones
-GenericName[et]=S√ºsteemisalve ikoon uuenduste kontrollimiseks
-GenericName[eu]=Erretilu-ikonoa eguneraketak egiaztatzeko
-GenericName[fi]=Paneelikuvake p√§ivitysten tarkistamiseen
-GenericName[fr]=Ic√¥ne pour v√©rifier les mises √† jour
-GenericName[he]=◊°◊û◊ú ◊ë◊û◊í◊© ◊î◊û◊¢◊®◊õ◊™ ◊©◊û◊ï◊ì◊ô◊¢ ◊¢◊ú ◊¢◊ì◊õ◊ï◊†◊ô◊ù
-GenericName[hi]=‡§Ö‡§™‡§°‡•á‡§ü ‡§ñ‡•ã‡§ú‡§®‡•á ‡§π‡•á‡§§‡•Å ‡§ü‡•ç‡§∞‡•á-‡§Ü‡§á‡§ï‡§®
-GenericName[hu]=T√°lca-ikon a friss√≠t√©sek ellen≈ërz√©s√©hez
-GenericName[id]=Ikon-Tray untuk memeriksa pembaruan
-GenericName[ie]=Un icone por controlar li actualisamentes
-GenericName[it]=Icona nel vassoio per controllare gli aggiornamenti
-GenericName[ja]=Êõ¥Êñ∞Á¢∫Ë™çÁî®„Éà„É¨„Ç§ „Ç¢„Ç§„Ç≥„É≥
-GenericName[ko]=ÏóÖÎç∞Ïù¥Ìä∏ ÌôïÏù∏ÏùÑ ÏúÑÌïú Ìä∏Î†àÏù¥-ÏïÑÏù¥ÏΩò
-GenericName[lt]=Dƒóklo piktograma, skirta tikrinti ar yra atnaujinim≈≥
-GenericName[nb]=Dokk ikon for sjekking av oppdateringer
-GenericName[nl]=Taakbalk-pictogram om te controleren op updates
-GenericName[pl]=Ikona na tacce do wyszukiwania uaktualnie≈Ñ
-GenericName[pt]=√çcone na barra de tarefas para verificar atualiza√ß√µes
-GenericName[pt_BR]=√çcone da bandeja para verificar atualiza√ß√µes
-GenericName[ru]=–ü–∏–∫—Ç–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
-GenericName[sk]=Ikona na paneli na kontrolu aktualiz√°ci√≠
-GenericName[sl]=Ikona sistemske vrstice za preverjanje posodobitev
-GenericName[sq]=Tray-icon p√´r k√´rkim p√´rdit√´sime 
-GenericName[sr]=–ò–∫–æ–Ω–∏—Ü–∞ —É —Ç—Ä–∞—Ü–∏ –∑–∞ –ø—Ä–æ–≤–µ—Ä—É –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –Ω–∞–¥–æ–≥—Ä–∞–¥—ö–∏
-GenericName[sv]=Aktivitetsikon f√∂r uppdateringskontroll
-GenericName[tr]=G√ºncellemeleri denetlemek i√ßin tepsi simgesi
-GenericName[uk]=–ü—ñ–∫—Ç–æ–≥—Ä–∞–º–∞ –ª–æ—Ç–∫–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω—å
-GenericName[zh_CN]=Áî®‰∫éÊ£ÄÊü•Êõ¥Êñ∞ÁöÑÊâòÁõòÂõæÊ†á
-GenericName[zh_TW]=Áî®‰æÜÊ™¢Êü•Êõ¥Êñ∞ÁöÑÁ≥ªÁµ±ÂàóÂúñÁ§∫
-Icon=dnfdragora
-Exec=dnfdragora-updater
-Comment=Automatically check for updates and notify
-Comment[af]=Kontroleer outomaties vir bywerkings en gee ‚Äôn kennisgewing
-Comment[bg]=–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Å —É–≤–µ–¥–æ–º—è–≤–∞–Ω–µ
-Comment[ca]=Comprova autom√†ticament si hi ha actualitzacions i notifica-m'ho
-Comment[cs]=Automaticky zkontrolovat aktualizace a d√°t zpr√°vu
-Comment[da]=S√∏g automatisk efter opdateringer og giv besked
-Comment[de]=Automatisch nach Aktualisierungen suchen und benachrichtigen
-Comment[en_GB]=Automatically check for updates and notify
-Comment[eo]=A≈≠tomate kontroli ƒùisdatigojn kaj sciigi
-Comment[es]=Comprobar actualizaciones y notificar atom√°ticamente
-Comment[et]=Uuenduste automaatne kontroll ja teavitamine
-Comment[eu]=Automatikoki eguneraketak egiaztatu eta jakinarazi
-Comment[fi]=Tarkistaa p√§ivitykset ja ilmoittaa niist√§
-Comment[fr]=V√©rifier automatiquement les mises √† jour et me le faire savoir
-Comment[he]=◊ú◊ë◊ì◊ï◊ß ◊ê◊ï◊ò◊ï◊û◊ò◊ô◊™ ◊ê◊ù ◊ô◊© ◊¢◊ì◊õ◊ï◊†◊ô◊ù ◊ï◊ú◊î◊ï◊ì◊ô◊¢
-Comment[hi]=‡§∏‡•ç‡§µ‡§§‡§É ‡§π‡•Ä ‡§Ö‡§™‡§°‡•á‡§ü ‡§ñ‡•ã‡§ú‡§ï‡§∞ ‡§∏‡•Ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç
-Comment[hr]=Automatski provjeri za a≈æuriranja i obavijesti 
-Comment[hu]=Friss√≠t√©sek automatikus ellen≈ërz√©se √©s √©rtes√≠t√©s
-Comment[id]=Memeriksa untuk pembaruan otomatis dan pemberitahuan
-Comment[ie]=Automaticmen controlar e notificar pri li actualisamentes
-Comment[it]=Controlla e notifica gli aggiornamenti automaticamente
-Comment[ja]=Ëá™ÂãïÁöÑ„Å´Êõ¥Êñ∞„ÇíÁ¢∫Ë™ç„Åó„Å¶ÈÄöÁü•„Åó„Åæ„Åô
-Comment[ko]=ÏóÖÎç∞Ïù¥Ìä∏ ÏûêÎèô ÌôïÏù∏ Î∞è ÏïåÎ¶º
-Comment[lt]=Automati≈°kai tikrinti ir prane≈°ti ar yra atnaujinim≈≥
-Comment[nb]=Automatisk sjekk for oppdateringer med varsel
-Comment[nl]=Automatisch controleren op updates en dit melden
-Comment[pl]=Sam wyszukuj uaktualnie≈Ñ i powiadamiaj o nich
-Comment[pt]=Procura e notifica o utilizador sobre as atualiza√ß√µes dispon√≠veis
-Comment[pt_BR]=Verificar automaticamente por atualiza√ß√µes e notificar
-Comment[ru]=–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–∫–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —Å–æ–æ–±—â–∞—Ç—å –æ –Ω–∏—Ö
-Comment[sk]=Automatick√° kontrola aktualiz√°ci√≠ s notifik√°ciou
-Comment[sl]=Samodejno preverjanje posodobitev in obve≈°ƒçanje
-Comment[sq]=Kontrolloni automatikisht p√´r p√´rdit√´sime dhe njoftoni
-Comment[sr]=–ê—É—Ç–æ–º–∞—Ç—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä–∞–≤–∞ –Ω–∞–¥–æ–≥—Ä–∞–¥—ö–µ –∏ –æ–±–∞–≤–µ—à—Ç–∞–≤–∞
-Comment[sv]=Kontrollera automatiskt efter uppdateringar och meddela
-Comment[tr]=G√ºncellemeleri kendiliƒüinden denetle ve bilgilendir
-Comment[uk]=–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —à—É–∫–∞—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ —Å–ø–æ–≤—ñ—â–∞—î –ø—Ä–æ –Ω–∏—Ö
-Comment[zh_CN]=Ëá™Âä®Ê£ÄÊü•Êõ¥Êñ∞Âπ∂ÊòæÁ§∫ÊèêÈÜí
-Comment[zh_TW]=Ëá™ÂãïÊ™¢Êü•Êõ¥Êñ∞‰∏¶ÈÄöÁü•
-Terminal=false
-Type=Application
-Categories=System;Settings;PackageManager;
-StartupNotify=false
unchanged:
--- a/share/applications/org.mageia.dnfdragora.desktop
+++ b/share/applications/org.mageia.dnfdragora.desktop
@@ -1,103 +1,63 @@
 [Desktop Entry]
-Name=dnfdragora
-Name[af]=dnfdragora
-Name[bg]=dnfdragora
-Name[ca]=dnfdragora
-Name[cs]=dnfdragora
-Name[da]=dnfdragora
-Name[de]=dnfdragora
-Name[el]=dnfdragora
-Name[en_GB]=dnfdragora
-Name[eo]=dnfdragora
-Name[es]=dnfdragora
-Name[et]=dnfdragora
-Name[eu]=dnfdragora
-Name[fi]=dnfdragora
-Name[fr]=dnfdragora
-Name[he]=dnfdragora
-Name[hi]=dnfdragora
-Name[hr]=dnfdragora
-Name[hu]=dnfdragora
-Name[id]=dnfdragora
-Name[ie]=dnfdragora
-Name[it]=dnfdragora
-Name[ja]=dnfdragora
-Name[ko]=dnfdragora
-Name[lt]=dnfdragora
-Name[nb]=dnfdragora
-Name[nl]=dnfdragora
-Name[pl]=dnfdragora
-Name[pt]=dnfdragora
-Name[pt_BR]=dnfdragora
-Name[ru]=dnfdragora
-Name[sk]=dnfdragora
-Name[sl]=dnfdragora
-Name[sq]=dnfdragora
-Name[sr]=dnfdragora
-Name[sv]=dnfdragora
-Name[tr]=DnfDragora
-Name[uk]=dnfdragora
-Name[zh_CN]=dnfdragora
-Name[zh_TW]=dnfdragora
-GenericName=Install & Remove Software
-GenericName[af]=Installeer en verwyder sagteware
-GenericName[ar]=ÿ™ÿ´ÿ®Ÿäÿ™ Ÿàÿ≠ÿ∞ŸÅ ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿßÿ™
-GenericName[ast]=Instalar y Desaniciar Software
-GenericName[bg]=–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –∏ –ø—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –Ω–∞ —Å–æ—Ñ—Ç—É–µ—Ä
-GenericName[bn]=‡¶∏‡¶´‡¶ü‡¶ì‡ßü‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶á‡¶®‡ßç‡¶∏‡¶ü‡¶≤ ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶∞‡¶ø‡ßü‡ßá ‡¶´‡ßá‡¶≤‡ßÅ‡¶®
-GenericName[br]=Stalia√± ha distalia√± poellado√π
-GenericName[ca]=Instal¬∑leu i elimineu programari
-GenericName[cs]=Instalovat a odeb√≠rat software
-GenericName[cy]=Gosod a thynnu  meddalwedd
-GenericName[da]=Install√©r og fjern software
-GenericName[de]=Installieren & Entfernen von Software
-GenericName[el]=ŒïŒ≥Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ Œ∫Œ±Œπ Œ±œÄŒµŒ≥Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ ŒªŒøŒ≥ŒπœÉŒºŒπŒ∫Œøœç
-GenericName[en_GB]=Install & Remove Software
-GenericName[eo]=Instali kaj Forigi Programojn
-GenericName[es]=Instalar y quitar aplicaciones
-GenericName[es_419]=Instalar & Eliminar Programas
-GenericName[et]=Tarkvara paigaldamine ja eemaldamine
-GenericName[eu]=Softwarea instalatu eta kendu
-GenericName[fi]=Asenna ja poista ohjelmia
-GenericName[fr]=Installer et d√©sinstaller des logiciels
-GenericName[gl]=Instalar e eliminar software
-GenericName[he]=◊î◊™◊ß◊†◊î ◊ï◊î◊°◊®◊î ◊©◊ú ◊™◊ï◊õ◊†◊î
-GenericName[hi]=‡§∏‡•â‡§´‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞ ‡§á‡§Ç‡§∏‡•ç‡§ü‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç ‡§µ ‡§π‡§ü‡§æ‡§è‡§Å
-GenericName[hr]=Instaliraj i ukloni software
-GenericName[hu]=Szoftver telep√≠t√©se & elt√°vol√≠t√°sa
-GenericName[id]=Install & Hapus Software
-GenericName[ie]=Installar e remover programmas
-GenericName[is]=Setja inn og fjarl√¶gja hugb√∫na√∞
-GenericName[it]=Installa e rimuovi software
-GenericName[ja]=„ÇΩ„Éï„Éà„Ç¶„Çß„Ç¢„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´„Å®ÂâäÈô§
-GenericName[ko]=ÏÜåÌîÑÌä∏Ïõ®Ïñ¥ ÏÑ§Ïπò/Ï†úÍ±∞
-GenericName[ky]=–ü—Ä–æ–≥—Ä–∞–º–º–∞–Ω—ã –æ—Ä–Ω–æ—Ç—É—É –∂–∞–Ω–∞ ”©—á“Ø—Ä“Ø“Ø
-GenericName[lt]=ƒÆdiegti ir ≈°alinti programinƒô ƒØrangƒÖ
-GenericName[ltg]=Instalƒìt & N≈´jimt programmaturu
-GenericName[ms]=Pasang & Buang Perisian
-GenericName[nb]=Installer og fjern programvare
-GenericName[nl]=Software installeren & verwijderen
-GenericName[nn]=Installer og fjern programvare
-GenericName[pl]=Wgrywanie i usuwanie oprogramowania
-GenericName[pt]=Instalar e remover programas
-GenericName[pt_BR]=Instalar e Remover Programas
-GenericName[ro]=Instala»õi & √énlƒÉtura»õi aplica»õii
-GenericName[ru]=–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º
-GenericName[sk]=In≈°tal√°cia a odstr√°nenie softv√©ru
-GenericName[sl]=Namestite in odstranite programe
-GenericName[sq]=Instalo & Hiq Programe
-GenericName[sr]=–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞—ò –∏ —É–∫–ª–æ–Ω–∏ —Å–æ—Ñ—Ç–≤–µ—Ä
-GenericName[sv]=Installera och ta bort program
-GenericName[tg]=–ù–∞—Å–± –≤–∞ —Ç–æ–∑–∞ –∫–∞—Ä–¥–∞–Ω–∏ –Ω–∞—Ä–º–∞—Ñ–∑–æ—Ä
-GenericName[tr]=Yazƒ±lƒ±m Kur & Kaldƒ±r
-GenericName[uk]=–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–±–æ –≤–∏–ª—É—á–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º
-GenericName[uz]=Dasturlarni o ªrnatish va olib tashlash
-GenericName[vi]=C√†i ƒë·∫∑t v√† g·ª° b·ªè ph·∫ßn m·ªÅm
-GenericName[wa]=Astaler eyet oister des programes
-GenericName[zh_CN]=ÂÆâË£Ö & ÁßªÈô§ËΩØ‰ª∂
-GenericName[zh_HK]=ÂÆâË£ùËàáÁßªÈô§ËªüÈ´î
-GenericName[zh_TW]=ÂÆâË£ùËàáÁßªÈô§ËªüÈ´î
-Icon=dnfdragora
+Name=Install & Remove Software
+Name[af]=Installeer en verwyder sagteware
+Name[ar]=ÿ™ÿ´ÿ®Ÿäÿ™ Ÿàÿ≠ÿ∞ŸÅ ÿßŸÑÿ®ÿ±ŸÖÿ¨Ÿäÿßÿ™
+Name[ast]=Instalar y Desaniciar Software
+Name[bg]=–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –∏ –ø—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –Ω–∞ —Å–æ—Ñ—Ç—É–µ—Ä
+Name[bn]=‡¶∏‡¶´‡¶ü‡¶ì‡ßü‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶á‡¶®‡ßç‡¶∏‡¶ü‡¶≤ ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶∞‡¶ø‡ßü‡ßá ‡¶´‡ßá‡¶≤‡ßÅ‡¶®
+Name[br]=Stalia√± ha distalia√± poellado√π
+Name[ca]=Instal¬∑leu i elimineu programari
+Name[cs]=Instalovat a odeb√≠rat software
+Name[cy]=Gosod a thynnu  meddalwedd
+Name[da]=Install√©r og fjern software
+Name[de]=Installieren & Entfernen von Software
+Name[el]=ŒïŒ≥Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ Œ∫Œ±Œπ Œ±œÄŒµŒ≥Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ ŒªŒøŒ≥ŒπœÉŒºŒπŒ∫Œøœç
+Name[en_GB]=Install & Remove Software
+Name[eo]=Instali kaj Forigi Programojn
+Name[es]=Instalar y quitar aplicaciones
+Name[es_419]=Instalar & Eliminar Programas
+Name[et]=Tarkvara paigaldamine ja eemaldamine
+Name[eu]=Softwarea instalatu eta kendu
+Name[fi]=Asenna ja poista ohjelmia
+Name[fr]=Installer et d√©sinstaller des logiciels
+Name[gl]=Instalar e eliminar software
+Name[he]=◊î◊™◊ß◊†◊î ◊ï◊î◊°◊®◊î ◊©◊ú ◊™◊ï◊õ◊†◊î
+Name[hi]=‡§∏‡•â‡§´‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞ ‡§á‡§Ç‡§∏‡•ç‡§ü‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç ‡§µ ‡§π‡§ü‡§æ‡§è‡§Å
+Name[hr]=Instaliraj i ukloni software
+Name[hu]=Szoftver telep√≠t√©se & elt√°vol√≠t√°sa
+Name[id]=Install & Hapus Software
+Name[ie]=Installar e remover programmas
+Name[is]=Setja inn og fjarl√¶gja hugb√∫na√∞
+Name[it]=Installa e rimuovi software
+Name[ja]=„ÇΩ„Éï„Éà„Ç¶„Çß„Ç¢„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´„Å®ÂâäÈô§
+Name[ko]=ÏÜåÌîÑÌä∏Ïõ®Ïñ¥ ÏÑ§Ïπò/Ï†úÍ±∞
+Name[ky]=–ü—Ä–æ–≥—Ä–∞–º–º–∞–Ω—ã –æ—Ä–Ω–æ—Ç—É—É –∂–∞–Ω–∞ ”©—á“Ø—Ä“Ø“Ø
+Name[lt]=ƒÆdiegti ir ≈°alinti programinƒô ƒØrangƒÖ
+Name[ltg]=Instalƒìt & N≈´jimt programmaturu
+Name[ms]=Pasang & Buang Perisian
+Name[nb]=Installer og fjern programvare
+Name[nl]=Software installeren & verwijderen
+Name[nn]=Installer og fjern programvare
+Name[pl]=Wgrywanie i usuwanie oprogramowania
+Name[pt]=Instalar e remover programas
+Name[pt_BR]=Instalar e Remover Programas
+Name[ro]=Instala»õi & √énlƒÉtura»õi aplica»õii
+Name[ru]=–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º
+Name[sk]=In≈°tal√°cia a odstr√°nenie softv√©ru
+Name[sl]=Namestite in odstranite programe
+Name[sq]=Instalo & Hiq Programe
+Name[sr]=–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞—ò –∏ —É–∫–ª–æ–Ω–∏ —Å–æ—Ñ—Ç–≤–µ—Ä
+Name[sv]=Installera och ta bort program
+Name[tg]=–ù–∞—Å–± –≤–∞ —Ç–æ–∑–∞ –∫–∞—Ä–¥–∞–Ω–∏ –Ω–∞—Ä–º–∞—Ñ–∑–æ—Ä
+Name[tr]=Yazƒ±lƒ±m Kur & Kaldƒ±r
+Name[uk]=–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–±–æ –≤–∏–ª—É—á–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º
+Name[uz]=Dasturlarni o ªrnatish va olib tashlash
+Name[vi]=C√†i ƒë·∫∑t v√† g·ª° b·ªè ph·∫ßn m·ªÅm
+Name[wa]=Astaler eyet oister des programes
+Name[zh_CN]=ÂÆâË£Ö & ÁßªÈô§ËΩØ‰ª∂
+Name[zh_HK]=ÂÆâË£ùËàáÁßªÈô§ËªüÈ´î
+Name[zh_TW]=ÂÆâË£ùËàáÁßªÈô§ËªüÈ´î
+Icon=muon
 Exec=dnfdragora
 Comment=A graphical front end for installing, removing and updating packages
 Comment[af]=‚Äôn Grafiese program vir die installasie, verwydering en bywerking van pakkette
unchanged:
--- a/share/metainfo/org.mageia.dnfdragora.appdata.xml
+++ /dev/null
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!-- Copyright 2016 Neal Gompa <ngompa13@gmail.com> -->
-<component type="desktop">
- <id>org.mageia.dnfdragora.desktop</id>
- <metadata_license>CC-BY-SA-4.0</metadata_license>
- <project_license>GPL-3.0</project_license>
- <name>dnfdragora</name>
- <summary>A frontend for DNF using libyui UI abstraction library</summary>
- <description>
-  <p>
-     dnfdragora is a DNF frontend, inspired by rpmdragora from Mageia (originally rpmdrake).
-  </p>
-
-  <p>
-     dnfdragora is written in Python 3 and uses libYui, the widget abstraction library written by SUSE,
-     so that it can be run using Qt 5, GTK+ 3, or ncurses interfaces. It provides a frontend for the
-     DNF package manager that can be used in any kind of system environment.
-  </p>
- </description>
- <screenshots>
-   <screenshot type="default" width="1706" height="862">
-       https://raw.githubusercontent.com/manatools/dnfdragora/master/screenshots/dnfdragora-qt.png
-   </screenshot>
- </screenshots>
- <url type="homepage">https://github.com/manatools/dnfdragora</url>
- <update_contact>ngompa_at_mageia.org</update_contact>
-</component>
-
diff -u b/dnfdragora/ui.py b/dnfdragora/ui.py
--- b/dnfdragora/ui.py
+++ b/dnfdragora/ui.py
@@ -384,10 +384,10 @@
         '''
             setup main dialog
         '''
-        yui.YUI.app().setApplicationTitle(_("Software Management - dnfdragora"))
+        yui.YUI.app().setApplicationTitle(_("Software Management - dnfdragora"))
 
-        self.icon = self.images_path + "dnfdragora.png"
-        self.logo = self.images_path + "dnfdragora-logo.png"
+        self.icon = "muon"
+        self.logo = "muon"
         yui.YUI.app().setApplicationIcon(self.icon)
 
         MGAPlugin = "mga"
